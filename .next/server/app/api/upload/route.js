"use strict";(()=>{var e={};e.id=998,e.ids=[998],e.modules={1841:e=>{e.exports=require("@aws-sdk/client-s3")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},2007:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>y,originalPathname:()=>f,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>w,staticGenerationBailout:()=>_});var o={};t.r(o),t.d(o,{POST:()=>POST}),t(5655);var a=t(3323),n=t(4647),i=t(1841),s=t(3951);let p=new i.S3Client({region:process.env.AWS_DEFAULT_REGION}),u=process.env.S3_BUCKET;async function uploadFile(e){let r=(0,s.Z)(),t=new i.PutObjectCommand({Bucket:u,Key:r+".png",Body:e});try{await p.send(t);let e=await fetch(`${process.env.SONIFICATION_API_URL}/${r}.png`,{headers:{contentType:"application/json"}});if(!e.ok)throw Error("Network response was not ok");return r}catch(t){"EntityAlreadyExists"===t.code?(console.error(`File with key ${r} already exists. Retrying with new UUID.`),await uploadFile(e)):console.error(t)}return""}async function POST(e){let r=await e.arrayBuffer(),t=await uploadFile(Buffer.from(r));return new Response(JSON.stringify({id:t}))}let d=a.AppRouteRouteModule,l=new d({definition:{kind:n.x.APP_ROUTE,page:"/api/upload/route",pathname:"/api/upload",filename:"route",bundlePath:"app/api/upload/route"},resolvedPagePath:"/Users/mirmukhammadmirsodikov/Documents/Development/sandbox/NASASpaceApps2023/sonification-web-app/app/api/upload/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:c,staticGenerationAsyncStorage:w,serverHooks:m,headerHooks:y,staticGenerationBailout:_}=l,f="/api/upload/route"}};var r=require("../../../webpack-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[405,157],()=>__webpack_exec__(2007));module.exports=t})();