"use strict";(()=>{var e={};e.id=998,e.ids=[998],e.modules={1841:e=>{e.exports=require("@aws-sdk/client-s3")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},2593:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>_,originalPathname:()=>h,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>y,staticGenerationAsyncStorage:()=>w,staticGenerationBailout:()=>f});var o={};r.r(o),r.d(o,{POST:()=>POST}),r(5655);var a=r(3323),n=r(4647),i=r(1841),s=r(3951);let p=new i.S3Client({region:process.env.AWS_DEFAULT_REGION}),u=process.env.S3_BUCKET;async function uploadFile(e){let t=(0,s.Z)(),r=new i.PutObjectCommand({Bucket:u,Key:t+".png",Body:e});try{await p.send(r);let e=await fetch(`${process.env.SONIFICATION_API_URL}/${t}.png`,{headers:{contentType:"application/json"}});if(!e.ok)throw Error("Network response was not ok");return t}catch(r){"EntityAlreadyExists"===r.code?(console.error(`File with key ${t} already exists. Retrying with new UUID.`),await uploadFile(e)):console.error(r)}return""}async function POST(e){let t=await e.arrayBuffer(),r=await uploadFile(Buffer.from(t));return new Response(JSON.stringify({id:r}))}let l=a.AppRouteRouteModule,d=new l({definition:{kind:n.x.APP_ROUTE,page:"/api/upload/route",pathname:"/api/upload",filename:"route",bundlePath:"app/api/upload/route"},resolvedPagePath:"/Users/ethan/dev/projects/sonification-web-client/app/api/upload/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:c,staticGenerationAsyncStorage:w,serverHooks:y,headerHooks:_,staticGenerationBailout:f}=d,h="/api/upload/route"}};var t=require("../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[405,157],()=>__webpack_exec__(2593));module.exports=r})();